{"ast":null,"code":"var _jsxFileName = \"/Users/harris/Documents/pushFIT-master/src/components/appComponents/Workout.js\";\nimport React from 'react';\nimport Duration from './Duration';\nimport AudioPlayer from './AudioPlayer';\nimport Completion from './Completion';\nimport CurrentExercise from './CurrentExercise';\nimport EndWorkout from './EndWorkout';\nimport MobileOptions from './MobileOptions';\nimport MediaQuery from 'react-responsive';\n\nclass Workout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.runTimer = () => {\n      // run the Workout\n      var lowAudio = new Audio('./sounds/low-beep.mp3');\n      lowAudio.play();\n      let p = Promise.resolve();\n\n      for (let e of this.state.list) {\n        p = p.then(() => this.setState({\n          currentExerciseLength: e.duration\n        })).then(() => this.countdown(e.duration, e.exercise)).then(() => {\n          if (this._isMounted) {\n            this.setState({\n              currentExerciseLength: this.state.rest\n            });\n          }\n        }).then(() => {\n          if (this._isMounted) {\n            this.setState({\n              currentProgress: this.state.currentProgress + 1\n            });\n          }\n        }).then(() => this.countdown(this.state.rest, 'Take a Rest'));\n      }\n\n      p.then(() => {\n        if (this._isMounted) {\n          this.setState({\n            currentTime: null,\n            currentExercise: 'You Finished. Well Done!'\n          });\n        }\n      });\n    };\n\n    this.setCurrent = (time, exercise) => {\n      // set the current Exercise\n      this.setState({\n        currentTime: time,\n        currentExercise: exercise\n      });\n    };\n\n    this.countdown = (time, exercise) => {\n      // create the countdown\n      return new Promise(resolve => {\n        var highAudio = new Audio('./sounds/high-beep.mp3');\n        var lowAudio = new Audio('./sounds/low-beep.mp3');\n        this.i = setInterval(() => {\n          if (this._isMounted === false) {\n            clearInterval(this.i);\n            resolve();\n          } else {\n            this.setCurrent(time, exercise);\n\n            if (time < 4 && time > 0) {\n              highAudio.play();\n            }\n\n            if (time === 0) {\n              lowAudio.play();\n              clearInterval(this.i);\n              resolve();\n            }\n\n            time--;\n          }\n        }, 1000);\n      });\n    };\n\n    this.state = {\n      list: this.props.list,\n      rest: this.props.rest,\n      currentExercise: null,\n      currentExerciseLength: this.props.firstExerciseLength,\n      currentTime: this.props.firstExerciseLength,\n      currentProgress: 0\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    window.scrollTo(0, 0);\n    this.runTimer();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const workoutStyle = {\n      maxWidth: 1200,\n      background: '#27272F',\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      margin: '0px auto',\n      justifyContent: 'center'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: workoutStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(MobileOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CurrentExercise, {\n      currentExercise: this.state.currentExercise,\n      progress: this.state.currentProgress,\n      currentTime: this.state.currentTime,\n      currentExerciseLength: this.state.currentExerciseLength,\n      list: this.state.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MediaQuery, {\n      maxDeviceWidth: 450,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(EndWorkout, {\n      endWorkout: this.props.endWorkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(MediaQuery, {\n      minDeviceWidth: 450,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Duration, {\n      totalExercises: this.state.list.length,\n      totalRest: this.props.totalRest,\n      currentExercise: this.state.currentExercise,\n      progress: this.state.currentProgress,\n      list: this.state.list,\n      rest: this.props.rest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Completion, {\n      endWorkout: this.props.endWorkout,\n      progress: this.state.currentProgress,\n      list: this.state.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Workout;","map":{"version":3,"sources":["/Users/harris/Documents/pushFIT-master/src/components/appComponents/Workout.js"],"names":["React","Duration","AudioPlayer","Completion","CurrentExercise","EndWorkout","MobileOptions","MediaQuery","Workout","Component","constructor","props","runTimer","lowAudio","Audio","play","p","Promise","resolve","e","state","list","then","setState","currentExerciseLength","duration","countdown","exercise","_isMounted","rest","currentProgress","currentTime","currentExercise","setCurrent","time","highAudio","i","setInterval","clearInterval","firstExerciseLength","componentDidMount","window","scrollTo","componentWillUnmount","render","workoutStyle","maxWidth","background","display","flexDirection","flexWrap","margin","justifyContent","endWorkout","length","totalRest"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Duration from './Duration';\nimport AudioPlayer from './AudioPlayer';\nimport Completion from './Completion';\nimport CurrentExercise from './CurrentExercise';\nimport EndWorkout from './EndWorkout';\nimport MobileOptions from './MobileOptions';\nimport MediaQuery from 'react-responsive'\n\nclass Workout extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            list:this.props.list,\n            rest:this.props.rest,\n            currentExercise : null,\n            currentExerciseLength:this.props.firstExerciseLength,\n            currentTime : this.props.firstExerciseLength,\n            currentProgress:0,\n          };\n    }\n\n    runTimer = () => { // run the Workout\n        var lowAudio = new Audio('./sounds/low-beep.mp3');\n        lowAudio.play();\n        let p = Promise.resolve();\n        for (let e of this.state.list) {\n                p = p.then( () => this.setState({currentExerciseLength:e.duration}))\n                        .then( () => this.countdown(e.duration, e.exercise))\n                            .then( () => { \n                                            if(this._isMounted){\n                                                this.setState({currentExerciseLength:this.state.rest})\n                                            }})\n                                .then( () => { \n                                            if(this._isMounted){\n                                                this.setState({currentProgress: this.state.currentProgress + 1})\n                                            }})\n                                    .then( () => this.countdown(this.state.rest, 'Take a Rest'))\n        }\n        p.then(() => {\n            if(this._isMounted){\n                this.setState({ \n                    currentTime : null,\n                    currentExercise : 'You Finished. Well Done!'\n                    })\n                }\n            });\n    };\n\n    setCurrent = (time, exercise) => { // set the current Exercise\n        this.setState({ currentTime : time,\n                        currentExercise : exercise\n                        }\n                    )\n    };\n\n    countdown = (time, exercise) => { // create the countdown\n    return new Promise(resolve => {\n        var highAudio = new Audio('./sounds/high-beep.mp3');\n        var lowAudio = new Audio('./sounds/low-beep.mp3');\n            this.i = setInterval(\n                () => {\n                    if(this._isMounted === false){\n                        clearInterval(this.i)\n                        resolve();\n                    }\n                    else{\n                        this.setCurrent(time, exercise);\n                        if(time < 4 && time > 0){\n                            highAudio.play();\n                            }\n                        if (time === 0) {\n                            lowAudio.play();\n                            clearInterval(this.i)\n                            resolve();\n                            }\n                        time--;\n                        }\n                    }\n                , 1000);\n            }\n        );\n    }\n\n    componentDidMount(){\n        this._isMounted = true;\n        window.scrollTo(0, 0)\n        this.runTimer();\n    };\n      \n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    render(){\n        const workoutStyle = {\n            maxWidth:1200,\n            background:'#27272F',\n            display:'flex',\n            flexDirection:'row',\n            flexWrap:'wrap',\n            margin:'0px auto',\n            justifyContent:'center'\n        }   \n\n        return(<div style={workoutStyle}>\n                        <MobileOptions/>\n                        <CurrentExercise    currentExercise = {this.state.currentExercise}\n                                            progress = {this.state.currentProgress}\n                                            currentTime = {this.state.currentTime} \n                                            currentExerciseLength = {this.state.currentExerciseLength}\n                                            list = {this.state.list}/>\n            <MediaQuery maxDeviceWidth={450}>\n                        <EndWorkout         endWorkout = {this.props.endWorkout}/>\n            </MediaQuery>\n            <MediaQuery minDeviceWidth={450}>\n                    \n                    <Duration           totalExercises = {this.state.list.length}\n                                        totalRest = {this.props.totalRest}\n                                        currentExercise = {this.state.currentExercise}\n                                        progress = {this.state.currentProgress}\n                                        list = {this.state.list}\n                                        rest = {this.props.rest}\n                                        />\n                    <AudioPlayer/>\n                    \n                    <Completion         endWorkout = {this.props.endWorkout} \n                                        progress = {this.state.currentProgress}\n                                        list = {this.state.list}/>          \n        </MediaQuery>\n                </div>\n        )\n    }\n}\n\nexport default Workout;"]},"metadata":{},"sourceType":"module"}