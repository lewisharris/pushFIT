{"ast":null,"code":"var _jsxFileName = \"/Users/harris/Documents/pushFIT-master/src/components/appComponents/PushFitApp.js\";\nimport React from 'react';\nimport Input from './Input';\nimport Review from './Review';\nimport Workout from './Workout';\nimport Intro from './Intro';\nimport './PushFitAppStyle.scss';\nimport { Link } from \"react-router-dom\";\n\nclass PushFitApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addExercise = obj => {\n      // Add Exercise object to the main workout Array\n      this.setState({\n        workoutArray: this.state.workoutArray.concat(obj)\n      });\n    };\n\n    this.deleteExercise = key => {\n      // remove selected exercise from workout Array\n      this.setState(prevState => ({\n        workoutArray: prevState.workoutArray.filter(exercise => exercise.key !== key)\n      }));\n    };\n\n    this.setRest = element => {\n      // set the rest period\n      this.setState({\n        rest: parseInt(element.target.value)\n      });\n    };\n\n    this.increment = event => {\n      // Increase the rest duration by 1\n      this.setState({\n        rest: this.state.rest + 1\n      });\n    };\n\n    this.decrement = event => {\n      // Decrease the rest duration by 1\n      if (this.state.rest === 0) {\n        return;\n      } else {\n        this.setState({\n          rest: parseInt(this.state.rest) - 1\n        });\n      }\n    };\n\n    this.clearWorkout = () => {\n      // Clear all contents from the workout\n      this.setState({\n        workoutArray: []\n      });\n    };\n\n    this.endWorkout = () => {\n      // End the workout/return to the review page\n      this.toggleState('Review');\n      this.toggleState('Workout');\n    };\n\n    this.calculateTotalDuration = () => {\n      //Calculate the total duration of the workout\n      const restPeriod = parseInt(this.state.rest) * parseInt(this.state.workoutArray.length - 1);\n      const totalExercise = parseInt(this.state.workoutArray.map(item => {\n        return item.duration;\n      }).reduce(function (a, b) {\n        return a + b;\n      }, 0));\n      this.setState({\n        totalDuration: restPeriod + totalExercise\n      });\n    };\n\n    this.setFirstExerciseTime = () => {\n      if (this.state.workoutArray.length !== 0) {\n        this.setState({\n          firstExerciseLength: this.state.workoutArray[0].duration\n        });\n      } else {\n        return;\n      }\n    };\n\n    this.state = {\n      workoutArray: [],\n      // array that workout will be added to\n      rest: 30,\n      // chosen rest period between exercises\n      TotalRest: null,\n      // total rest period\n      totalDuration: 0,\n      firstExerciseLength: 30,\n      Input: true,\n      Review: false,\n      Workout: false,\n      Intro: false\n    };\n    this.toggleState = this.toggleState.bind(this);\n  }\n\n  toggleState(component) {\n    // toggle pages\n    if (this.state[component]) {\n      this.setState({\n        [component]: false\n      });\n    } else {\n      this.setState({\n        [component]: true\n      });\n    }\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"images/pushfit-logo.svg\",\n      alt: \"pushfit\",\n      className: \"site-logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"router-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"leave-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leave-app-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 84\n      }\n    }), \"Leave Workout\")), this.state.Input === false ? null : /*#__PURE__*/React.createElement(Input, {\n      addExercise: this.addExercise,\n      toggle: this.toggleState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), this.state.Review === false ? null : /*#__PURE__*/React.createElement(Review, {\n      list: this.state.workoutArray,\n      setRest: this.setRest,\n      rest: this.state.rest,\n      increment: this.increment,\n      decrement: this.decrement,\n      totalDur: this.state.totalDuration,\n      startWorkout: this.startWorkout,\n      clearWorkout: this.clearWorkout,\n      delete: this.deleteExercise,\n      toggle: this.toggleState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), this.state.Intro === false ? null : /*#__PURE__*/React.createElement(Intro, {\n      toggle: this.toggleState,\n      setFirstExerciseTime: this.setFirstExerciseTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 55\n      }\n    }), this.state.Workout === false ? null : /*#__PURE__*/React.createElement(Workout, {\n      list: this.state.workoutArray,\n      rest: this.state.rest,\n      totalDur: this.state.totalDuration,\n      totalRest: this.state.TotalRest,\n      endWorkout: this.endWorkout,\n      firstExerciseLength: this.state.firstExerciseLength,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n;\nexport default PushFitApp;","map":{"version":3,"sources":["/Users/harris/Documents/pushFIT-master/src/components/appComponents/PushFitApp.js"],"names":["React","Input","Review","Workout","Intro","Link","PushFitApp","Component","constructor","props","addExercise","obj","setState","workoutArray","state","concat","deleteExercise","key","prevState","filter","exercise","setRest","element","rest","parseInt","target","value","increment","event","decrement","clearWorkout","endWorkout","toggleState","calculateTotalDuration","restPeriod","length","totalExercise","map","item","duration","reduce","a","b","totalDuration","setFirstExerciseTime","firstExerciseLength","TotalRest","bind","component","componentDidMount","window","scrollTo","render","startWorkout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input';\nimport Review from './Review';\nimport Workout from './Workout';\nimport Intro from './Intro';\nimport './PushFitAppStyle.scss';\nimport { Link } from \"react-router-dom\";\n\nclass PushFitApp extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            workoutArray : [], // array that workout will be added to\n            rest : 30, // chosen rest period between exercises\n            TotalRest : null, // total rest period\n            totalDuration:0,\n            firstExerciseLength:30,\n            Input:true,\n            Review:false,\n            Workout:false,\n            Intro:false\n        }\n        this.toggleState = this.toggleState.bind(this);\n    }\n\n    addExercise = (obj) => { // Add Exercise object to the main workout Array\n        this.setState(\n            {workoutArray : this.state.workoutArray.concat(obj)}\n        )\n    }\n\n    deleteExercise = (key) => { // remove selected exercise from workout Array\n        this.setState(prevState => ({\n            workoutArray: prevState.workoutArray.filter(exercise => exercise.key !== key )\n        }));\n     }\n\n    setRest = (element) => { // set the rest period\n        this.setState(\n            {rest: parseInt(element.target.value) }\n        )\n    };\n\n    increment = (event) =>{// Increase the rest duration by 1\n        this.setState(\n            {rest: this.state.rest + 1}\n        );\n    };\n\n    decrement = (event) =>{ // Decrease the rest duration by 1\n        if(this.state.rest === 0){\n            return\n        }\n        else{\n            this.setState(\n                {rest: parseInt(this.state.rest) - 1}\n            )\n        }\n    };\n\n    clearWorkout = () => { // Clear all contents from the workout\n        this.setState(\n            {workoutArray:[]}\n        )\n    }\n\n    endWorkout = () => { // End the workout/return to the review page\n        this.toggleState('Review');\n        this.toggleState('Workout');\n    };\n\n    toggleState (component){ // toggle pages\n        if(this.state[component]){\n            this.setState({[component]:false})\n        }\n        else{\n            this.setState({[component]:true})\n        }\n    }\n\n    calculateTotalDuration = () => { //Calculate the total duration of the workout\n        const restPeriod = (parseInt(this.state.rest) * (parseInt(this.state.workoutArray.length -1)));\n        const totalExercise = parseInt(this.state.workoutArray.map(item => {return item.duration}).reduce(function(a,b){\n            return a + b;\n        },0));\n        this.setState({totalDuration: restPeriod + totalExercise})\n    };\n\n    setFirstExerciseTime = () => {\n        if(this.state.workoutArray.length !== 0){\n            this.setState({firstExerciseLength: this.state.workoutArray[0].duration})\n        }\n        else{\n            return\n        }\n    }\n\n    componentDidMount(){\n        window.scrollTo(0, 0)\n    }\n\n    render(){\n        return(\n            <div className='app-container'>\n                <img src=\"images/pushfit-logo.svg\" alt=\"pushfit\" className=\"site-logo\"></img>\n                <Link to=\"/\" className=\"router-link\"><button className=\"leave-app\"><div className='leave-app-arrow'></div>Leave Workout</button></Link>\n                \n                {(this.state.Input === false) ? null\n                :\n                <Input  addExercise = {this.addExercise}\n                        toggle = {this.toggleState}/>\n                }\n\n                {(this.state.Review === false) ? null\n                :\n                <Review list = {this.state.workoutArray}\n                        setRest = {this.setRest}\n                        rest = {this.state.rest}\n                        increment = {this.increment}\n                        decrement = {this.decrement}\n                        totalDur = {this.state.totalDuration}\n                        startWorkout = {this.startWorkout}\n                        clearWorkout = {this.clearWorkout}\n                        delete = {this.deleteExercise}\n                        toggle = {this.toggleState}/>\n                }\n                \n                {(this.state.Intro === false)? null : <Intro    toggle = {this.toggleState}\n                                                                setFirstExerciseTime = {this.setFirstExerciseTime}/>\n                }\n                {(this.state.Workout === false) ? null\n                :\n                <Workout    \n                            list = {this.state.workoutArray}\n                            rest = {this.state.rest} \n                            totalDur = {this.state.totalDuration}\n                            totalRest = {this.state.TotalRest}\n                            endWorkout = {this.endWorkout} \n                            firstExerciseLength = {this.state.firstExerciseLength}         \n                            />\n                }\n            </div>\n        )\n    }\n};\n\nexport default PushFitApp;"]},"metadata":{},"sourceType":"module"}