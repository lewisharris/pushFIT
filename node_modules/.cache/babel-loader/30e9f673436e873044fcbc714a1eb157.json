{"ast":null,"code":"import _defineProperty from\"/Users/harris/Documents/pushFIT-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/harris/Documents/pushFIT-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/harris/Documents/pushFIT-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/harris/Documents/pushFIT-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/harris/Documents/pushFIT-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/harris/Documents/pushFIT-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Input from'./Input';import Review from'./Review';import Workout from'./Workout';import Intro from'./Intro';import'./PushFitAppStyle.scss';import{Link}from\"react-router-dom\";var PushFitApp=/*#__PURE__*/function(_React$Component){_inherits(PushFitApp,_React$Component);var _super=_createSuper(PushFitApp);function PushFitApp(props){var _this;_classCallCheck(this,PushFitApp);_this=_super.call(this,props);_this.addExercise=function(obj){// Add Exercise object to the main workout Array\n_this.setState({workoutArray:_this.state.workoutArray.concat(obj)});};_this.deleteExercise=function(key){// remove selected exercise from workout Array\n_this.setState(function(prevState){return{workoutArray:prevState.workoutArray.filter(function(exercise){return exercise.key!==key;})};});};_this.setRest=function(element){// set the rest period\n_this.setState({rest:parseInt(element.target.value)});};_this.increment=function(event){// Increase the rest duration by 1\n_this.setState({rest:_this.state.rest+1});};_this.decrement=function(event){// Decrease the rest duration by 1\nif(_this.state.rest===0){return;}else{_this.setState({rest:parseInt(_this.state.rest)-1});}};_this.clearWorkout=function(){// Clear all contents from the workout\n_this.setState({workoutArray:[]});};_this.endWorkout=function(){// End the workout/return to the review page\n_this.toggleState('Review');_this.toggleState('Workout');};_this.calculateTotalDuration=function(){//Calculate the total duration of the workout\nvar restPeriod=parseInt(_this.state.rest)*parseInt(_this.state.workoutArray.length-1);var totalExercise=parseInt(_this.state.workoutArray.map(function(item){return item.duration;}).reduce(function(a,b){return a+b;},0));_this.setState({totalDuration:restPeriod+totalExercise});};_this.setFirstExerciseTime=function(){if(_this.state.workoutArray.length!==0){_this.setState({firstExerciseLength:_this.state.workoutArray[0].duration});}else{return;}};_this.state={workoutArray:[],// array that workout will be added to\nrest:30,// chosen rest period between exercises\nTotalRest:null,// total rest period\ntotalDuration:0,firstExerciseLength:30,Input:true,Review:false,Workout:false,Intro:false};_this.toggleState=_this.toggleState.bind(_assertThisInitialized(_this));return _this;}_createClass(PushFitApp,[{key:\"toggleState\",value:function toggleState(component){// toggle pages\nif(this.state[component]){this.setState(_defineProperty({},component,false));}else{this.setState(_defineProperty({},component,true));}}},{key:\"componentDidMount\",value:function componentDidMount(){window.scrollTo(0,0);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"app-container\"},/*#__PURE__*/React.createElement(\"img\",{src:\"images/pushfit-logo.svg\",alt:\"pushfit\",className:\"app-logo\"}),/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"router-link\"},/*#__PURE__*/React.createElement(\"button\",{className:\"leave-app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"leave-app-arrow\"}),\"Leave App\")),this.state.Input===false?null:/*#__PURE__*/React.createElement(Input,{addExercise:this.addExercise,toggle:this.toggleState}),this.state.Review===false?null:/*#__PURE__*/React.createElement(Review,{list:this.state.workoutArray,setRest:this.setRest,rest:this.state.rest,increment:this.increment,decrement:this.decrement,totalDur:this.state.totalDuration,startWorkout:this.startWorkout,clearWorkout:this.clearWorkout,delete:this.deleteExercise,toggle:this.toggleState}),this.state.Intro===false?null:/*#__PURE__*/React.createElement(Intro,{toggle:this.toggleState,setFirstExerciseTime:this.setFirstExerciseTime}),this.state.Workout===false?null:/*#__PURE__*/React.createElement(Workout,{list:this.state.workoutArray,rest:this.state.rest,totalDur:this.state.totalDuration,totalRest:this.state.TotalRest,endWorkout:this.endWorkout,firstExerciseLength:this.state.firstExerciseLength}));}}]);return PushFitApp;}(React.Component);;export default PushFitApp;","map":{"version":3,"sources":["/Users/harris/Documents/pushFIT-master/src/components/appComponents/PushFitApp.js"],"names":["React","Input","Review","Workout","Intro","Link","PushFitApp","props","addExercise","obj","setState","workoutArray","state","concat","deleteExercise","key","prevState","filter","exercise","setRest","element","rest","parseInt","target","value","increment","event","decrement","clearWorkout","endWorkout","toggleState","calculateTotalDuration","restPeriod","length","totalExercise","map","item","duration","reduce","a","b","totalDuration","setFirstExerciseTime","firstExerciseLength","TotalRest","bind","component","window","scrollTo","startWorkout","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from './Input';\nimport Review from './Review';\nimport Workout from './Workout';\nimport Intro from './Intro';\nimport './PushFitAppStyle.scss';\nimport { Link } from \"react-router-dom\";\n\nclass PushFitApp extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            workoutArray : [], // array that workout will be added to\n            rest : 30, // chosen rest period between exercises\n            TotalRest : null, // total rest period\n            totalDuration:0,\n            firstExerciseLength:30,\n            Input:true,\n            Review:false,\n            Workout:false,\n            Intro:false\n        }\n        this.toggleState = this.toggleState.bind(this);\n    }\n\n    addExercise = (obj) => { // Add Exercise object to the main workout Array\n        this.setState(\n            {workoutArray : this.state.workoutArray.concat(obj)}\n        )\n    }\n\n    deleteExercise = (key) => { // remove selected exercise from workout Array\n        this.setState(prevState => ({\n            workoutArray: prevState.workoutArray.filter(exercise => exercise.key !== key )\n        }));\n     }\n\n    setRest = (element) => { // set the rest period\n        this.setState(\n            {rest: parseInt(element.target.value) }\n        )\n    };\n\n    increment = (event) =>{// Increase the rest duration by 1\n        this.setState(\n            {rest: this.state.rest + 1}\n        );\n    };\n\n    decrement = (event) =>{ // Decrease the rest duration by 1\n        if(this.state.rest === 0){\n            return\n        }\n        else{\n            this.setState(\n                {rest: parseInt(this.state.rest) - 1}\n            )\n        }\n    };\n\n    clearWorkout = () => { // Clear all contents from the workout\n        this.setState(\n            {workoutArray:[]}\n        )\n    }\n\n    endWorkout = () => { // End the workout/return to the review page\n        this.toggleState('Review');\n        this.toggleState('Workout');\n    };\n\n    toggleState (component){ // toggle pages\n        if(this.state[component]){\n            this.setState({[component]:false})\n        }\n        else{\n            this.setState({[component]:true})\n        }\n    }\n\n    calculateTotalDuration = () => { //Calculate the total duration of the workout\n        const restPeriod = (parseInt(this.state.rest) * (parseInt(this.state.workoutArray.length -1)));\n        const totalExercise = parseInt(this.state.workoutArray.map(item => {return item.duration}).reduce(function(a,b){\n            return a + b;\n        },0));\n        this.setState({totalDuration: restPeriod + totalExercise})\n    };\n\n    setFirstExerciseTime = () => {\n        if(this.state.workoutArray.length !== 0){\n            this.setState({firstExerciseLength: this.state.workoutArray[0].duration})\n        }\n        else{\n            return\n        }\n    }\n\n    componentDidMount(){\n        window.scrollTo(0, 0)\n    }\n\n    render(){\n        return(\n            <div className='app-container'>\n                <img src=\"images/pushfit-logo.svg\" alt=\"pushfit\" className=\"app-logo\"></img>\n                <Link to=\"/\" className=\"router-link\"><button className=\"leave-app\"><div className='leave-app-arrow'></div>Leave App</button></Link>\n                \n                {(this.state.Input === false) ? null\n                :\n                <Input  addExercise = {this.addExercise}\n                        toggle = {this.toggleState}/>\n                }\n\n                {(this.state.Review === false) ? null\n                :\n                <Review list = {this.state.workoutArray}\n                        setRest = {this.setRest}\n                        rest = {this.state.rest}\n                        increment = {this.increment}\n                        decrement = {this.decrement}\n                        totalDur = {this.state.totalDuration}\n                        startWorkout = {this.startWorkout}\n                        clearWorkout = {this.clearWorkout}\n                        delete = {this.deleteExercise}\n                        toggle = {this.toggleState}/>\n                }\n                \n                {(this.state.Intro === false)? null : <Intro    toggle = {this.toggleState}\n                                                                setFirstExerciseTime = {this.setFirstExerciseTime}/>\n                }\n                {(this.state.Workout === false) ? null\n                :\n                <Workout    \n                            list = {this.state.workoutArray}\n                            rest = {this.state.rest} \n                            totalDur = {this.state.totalDuration}\n                            totalRest = {this.state.TotalRest}\n                            endWorkout = {this.endWorkout} \n                            firstExerciseLength = {this.state.firstExerciseLength}         \n                            />\n                }\n            </div>\n        )\n    }\n};\n\nexport default PushFitApp;"]},"metadata":{},"sourceType":"module"}