{"ast":null,"code":"import _slicedToArray from\"/Users/harris/Documents/pushFIT-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import'./ProgressBar.scss';// <p className=\"progress-text\">{this.props.currentTime}{this.props.suffix}</p>\nvar ProgressBar=function ProgressBar(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),offset=_useState2[0],setOffset=_useState2[1];var circleRef=useRef(null);var size=props.size,textSize=props.textSize,progress=props.progress,suffix=props.suffix,totalTime=props.totalTime,strokeWidth=props.strokeWidth,circleOneStroke=props.circleOneStroke,circleTwoStroke=props.circleTwoStroke;var center=size/2;var radius=size/2-strokeWidth/2;var circumference=2*Math.PI*radius;useEffect(function(){var progressOffset=-((totalTime-progress)/totalTime)*circumference;setOffset(progressOffset);circleRef.current.style='transition: stroke-dashoffset 1000ms linear;';},[setOffset,circumference,progress,offset,totalTime]);return/*#__PURE__*/React.createElement(\"div\",{className:\"progress-bar\"},/*#__PURE__*/React.createElement(\"svg\",{className:\"progress-svg\",height:size,width:size},/*#__PURE__*/React.createElement(\"circle\",{className:\"svg-circle-bg\",stroke:circleOneStroke,cx:center,cy:center,r:radius,strokeWidth:strokeWidth-0.2}),/*#__PURE__*/React.createElement(\"circle\",{className:\"svg-circle\",stroke:circleTwoStroke,cx:center,cy:center,r:radius,strokeWidth:strokeWidth,strokeDasharray:circumference,strokeDashoffset:offset,ref:circleRef}),/*#__PURE__*/React.createElement(\"text\",{className:\"svg-circle-text\",fontSize:textSize,x:center,y:center},progress,suffix)));};export default ProgressBar;","map":{"version":3,"sources":["/Users/harris/Documents/pushFIT-master/src/components/appComponents/ProgressBar.js"],"names":["React","useEffect","useState","useRef","ProgressBar","props","offset","setOffset","circleRef","size","textSize","progress","suffix","totalTime","strokeWidth","circleOneStroke","circleTwoStroke","center","radius","circumference","Math","PI","progressOffset","current","style"],"mappings":"6JAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,CAAoCC,MAApC,KAAkD,OAAlD,CACA,MAAO,oBAAP,CAGA;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,eAECH,QAAQ,CAAC,CAAD,CAFT,wCAEpBI,MAFoB,eAEZC,SAFY,eAG3B,GAAMC,CAAAA,SAAS,CAAGL,MAAM,CAAC,IAAD,CAAxB,CAH2B,GAMvBM,CAAAA,IANuB,CAcvBJ,KAduB,CAMvBI,IANuB,CAOvBC,QAPuB,CAcvBL,KAduB,CAOvBK,QAPuB,CAQvBC,QARuB,CAcvBN,KAduB,CAQvBM,QARuB,CASvBC,MATuB,CAcvBP,KAduB,CASvBO,MATuB,CAUvBC,SAVuB,CAcvBR,KAduB,CAUvBQ,SAVuB,CAWvBC,WAXuB,CAcvBT,KAduB,CAWvBS,WAXuB,CAYvBC,eAZuB,CAcvBV,KAduB,CAYvBU,eAZuB,CAavBC,eAbuB,CAcvBX,KAduB,CAavBW,eAbuB,CAgB3B,GAAMC,CAAAA,MAAM,CAAGR,IAAI,CAAG,CAAtB,CACA,GAAMS,CAAAA,MAAM,CAAGT,IAAI,CAAG,CAAP,CAAWK,WAAW,CAAG,CAAxC,CACA,GAAMK,CAAAA,aAAa,CAAG,EAAIC,IAAI,CAACC,EAAT,CAAcH,MAApC,CAEAjB,SAAS,CAAC,UAAM,CACZ,GAAMqB,CAAAA,cAAc,CAAG,EAAG,CAACT,SAAS,CAAGF,QAAb,EAAyBE,SAA5B,EAAyCM,aAAhE,CACAZ,SAAS,CAACe,cAAD,CAAT,CACAd,SAAS,CAACe,OAAV,CAAkBC,KAAlB,CAA0B,8CAA1B,CACH,CAJQ,CAIN,CAACjB,SAAD,CAAYY,aAAZ,CAA2BR,QAA3B,CAAqCL,MAArC,CAA4CO,SAA5C,CAJM,CAAT,CASI,mBACI,2BAAK,SAAS,CAAC,cAAf,eACI,2BACI,SAAS,CAAC,cADd,CAEI,MAAM,CAAGJ,IAFb,CAGI,KAAK,CAAGA,IAHZ,eAMI,8BACI,SAAS,CAAG,eADhB,CAEI,MAAM,CAAIM,eAFd,CAGI,EAAE,CAAIE,MAHV,CAII,EAAE,CAAIA,MAJV,CAKI,CAAC,CAAIC,MALT,CAMI,WAAW,CAAIJ,WAAW,CAAG,GANjC,EANJ,cAeI,8BACI,SAAS,CAAG,YADhB,CAEI,MAAM,CAAIE,eAFd,CAGI,EAAE,CAAIC,MAHV,CAII,EAAE,CAAIA,MAJV,CAKI,CAAC,CAAIC,MALT,CAMI,WAAW,CAAIJ,WANnB,CAOI,eAAe,CAAIK,aAPvB,CAQI,gBAAgB,CAAIb,MARxB,CASI,GAAG,CAAEE,SATT,EAfJ,cA4BI,4BAAM,SAAS,CAAC,iBAAhB,CAAkC,QAAQ,CAAEE,QAA5C,CAAsD,CAAC,CAAEO,MAAzD,CAAiE,CAAC,CAAEA,MAApE,EACCN,QADD,CACWC,MADX,CA5BJ,CADJ,CADJ,CAsCP,CAnED,CAsEA,cAAeR,CAAAA,WAAf","sourcesContent":["import React, {useEffect, useState, useRef } from 'react';\nimport './ProgressBar.scss'\n\n\n// <p className=\"progress-text\">{this.props.currentTime}{this.props.suffix}</p>\nconst ProgressBar = (props) => { \n\n    const [offset, setOffset] = useState(0);\n    const circleRef = useRef(null);\n\n    const { \n        size,\n        textSize, \n        progress,\n        suffix,\n        totalTime,\n        strokeWidth, \n        circleOneStroke, \n        circleTwoStroke,\n    } = props;\n\n    const center = size / 2;\n    const radius = size / 2 - strokeWidth / 2;\n    const circumference = 2 * Math.PI * radius;\n\n    useEffect(() => {\n        const progressOffset = - ((totalTime - progress) / totalTime) * circumference;\n        setOffset(progressOffset);\n        circleRef.current.style = 'transition: stroke-dashoffset 1000ms linear;';\n    }, [setOffset, circumference, progress, offset,totalTime]);\n\n\n\n\n        return(\n            <div className='progress-bar'>\n                <svg\n                    className=\"progress-svg\"\n                    height= {size}\n                    width= {size}>\n\n  \n                    <circle \n                        className = \"svg-circle-bg\"\n                        stroke = {circleOneStroke}\n                        cx = {center}\n                        cy = {center}\n                        r = {radius}\n                        strokeWidth = {strokeWidth - 0.2}\n                    />\n\n                    <circle\n                        className = \"svg-circle\"\n                        stroke = {circleTwoStroke}\n                        cx = {center}\n                        cy = {center}\n                        r = {radius}\n                        strokeWidth = {strokeWidth}\n                        strokeDasharray = {circumference}\n                        strokeDashoffset = {offset}\n                        ref={circleRef}\n                    />\n\n\n                    <text className=\"svg-circle-text\" fontSize={textSize} x={center} y={center}>\n                    {progress}{suffix}\n                    </text>\n\n\n                </svg>\n            </div>\n    )\n}\n\n\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}